#ifndef SYSCALL_H_
#define SYSCALL_H_

#include "process/process.h"

#define SYSCALL_KBREAK 0
#define SYSCALL_SLEEP 1
#define SYSCALL_SBRK 2
#define SYSCALL_FORK 3
#define SYSCALL_EXEC 4
#define SYSCALL_GETPID 5
#define SYSCALL_EXIT 6
#define SYSCALL_WAIT 7
#define SYSCALL_KILL 8
#define SYSCALL_BRK 9
#define SYSCALL_TIME 10
#define SYSCALL_DUP 11
#define SYSCALL_READ 12
#define SYSCALL_WRITE 13
#define SYSCALL_CLOSE 14
#define SYSCALL_FSTAT 15
#define SYSCALL_LINK 16
#define SYSCALL_UNLINK 17
#define SYSCALL_OPEN 18
#define SYSCALL_MKDIR 19
#define SYSCALL_MKNOD 20
#define SYSCALL_CHDIR 21
#define SYSCALL_PIPE 22

#define SYSCALL_MAX_ID 22
#define SYSCALL_NUM (SYSCALL_MAX_ID + 1)

#define SYSCALL_PG_START_ID 100
#define SYSCALL_GET_PG_ID (SYSCALL_PG_START_ID + 0)
#define SYSCALL_CREATE_PG (SYSCALL_PG_START_ID + 1)
#define SYSCALL_ENTER_PG (SYSCALL_PG_START_ID + 2)
#define SYSCALL_GET_PG_CPUS (SYSCALL_PG_START_ID + 3)
#define SYSCALL_INC_PG_CPUS (SYSCALL_PG_START_ID + 4)
#define SYSCALL_DEC_PG_CPUS (SYSCALL_PG_START_ID + 5)
#define SYSCALL_PG_PROCS_COUNT (SYSCALL_PG_START_ID + 6)
#define SYSCALL_PROC_OCCUPY_CPU (SYSCALL_PG_START_ID + 7)
#define SYSCALL_PROC_RELEASE_CPU (SYSCALL_PG_START_ID + 8)
#define SYSCALL_INC_PG_CPUS_FLEX (SYSCALL_PG_START_ID + 9)

#define SYSCALL_PG_MAX_ID (SYSCALL_PG_START_ID + 9)
#define SYSCALL_PG_NUM (SYSCALL_PG_MAX_ID - SYSCALL_PG_START_ID + 1)

#define SYSCALL_DB_START_ID 1000
#define SYSCALL_DB_COUNT_PROC_NUM SYSCALL_DB_START_ID

int handle_syscall(struct process *proc);
uint64 get_arg_n(struct trap_frame *tf, int i);

#endif
